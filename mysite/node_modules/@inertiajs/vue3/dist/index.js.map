{
  "version": 3,
  "sources": ["../src/index.ts", "../src/app.ts", "../src/remember.ts", "../src/useForm.ts", "../src/createInertiaApp.ts", "../src/head.ts", "../src/link.ts", "../src/useRemember.ts"],
  "sourcesContent": ["export { router } from '@inertiajs/core'\nexport { usePage } from './app'\nexport { default as createInertiaApp } from './createInertiaApp'\nexport { default as Head } from './head'\nexport { default as Link } from './link'\nexport { default as useForm } from './useForm'\nexport { default as useRemember } from './useRemember'\n", "import { createHeadManager, Page, router } from '@inertiajs/core'\nimport { DefineComponent, defineComponent, h, markRaw, Plugin, PropType, ref, shallowRef } from 'vue'\nimport remember from './remember'\nimport { VuePageHandlerArgs } from './types'\nimport useForm from './useForm'\n\nexport interface InertiaAppProps {\n  initialPage: Page\n  initialComponent?: object\n  resolveComponent?: (name: string) => DefineComponent | Promise<DefineComponent>\n  titleCallback?: (title: string) => string\n  onHeadUpdate?: (elements: string[]) => void\n}\n\nexport type InertiaApp = DefineComponent<InertiaAppProps>\n\nconst component = ref(null)\nconst page = ref<Partial<Page>>({})\nconst layout = shallowRef(null)\nconst key = ref(null)\nlet headManager = null\n\nconst App: InertiaApp = defineComponent({\n  name: 'Inertia',\n  props: {\n    initialPage: {\n      type: Object as PropType<Page>,\n      required: true,\n    },\n    initialComponent: {\n      type: Object,\n      required: false,\n    },\n    resolveComponent: {\n      type: Function as PropType<(name: string) => DefineComponent | Promise<DefineComponent>>,\n      required: false,\n    },\n    titleCallback: {\n      type: Function as PropType<(title: string) => string>,\n      required: false,\n      default: (title) => title,\n    },\n    onHeadUpdate: {\n      type: Function as PropType<(elements: string[]) => void>,\n      required: false,\n      default: () => () => {},\n    },\n  },\n  setup({ initialPage, initialComponent, resolveComponent, titleCallback, onHeadUpdate }) {\n    component.value = initialComponent ? markRaw(initialComponent) : null\n    page.value = initialPage\n    key.value = null\n\n    const isServer = typeof window === 'undefined'\n    headManager = createHeadManager(isServer, titleCallback, onHeadUpdate)\n\n    if (!isServer) {\n      router.init({\n        initialPage,\n        resolveComponent,\n        swapComponent: async (args: VuePageHandlerArgs) => {\n          component.value = markRaw(args.component)\n          page.value = args.page\n          key.value = args.preserveState ? key.value : Date.now()\n        },\n      })\n\n      router.on('navigate', () => headManager.forceUpdate())\n    }\n\n    return () => {\n      if (component.value) {\n        component.value.inheritAttrs = !!component.value.inheritAttrs\n\n        const child = h(component.value, {\n          ...page.value.props,\n          key: key.value,\n        })\n\n        if (layout.value) {\n          component.value.layout = layout.value\n          layout.value = null\n        }\n\n        if (component.value.layout) {\n          if (typeof component.value.layout === 'function') {\n            return component.value.layout(h, child)\n          }\n\n          return (Array.isArray(component.value.layout) ? component.value.layout : [component.value.layout])\n            .concat(child)\n            .reverse()\n            .reduce((child, layout) => {\n              layout.inheritAttrs = !!layout.inheritAttrs\n              return h(layout, { ...page.value.props }, () => child)\n            })\n        }\n\n        return child\n      }\n    }\n  },\n})\nexport default App\n\nexport const plugin: Plugin = {\n  install(app) {\n    router.form = useForm\n\n    Object.defineProperty(app.config.globalProperties, '$inertia', { get: () => router })\n    Object.defineProperty(app.config.globalProperties, '$page', { get: () => page.value })\n    Object.defineProperty(app.config.globalProperties, '$headManager', { get: () => headManager })\n\n    app.mixin(remember)\n  },\n}\n\nexport function usePage() {\n  return page.value\n}\n", "import { router } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport { ComponentOptions } from 'vue'\n\nconst remember: ComponentOptions = {\n  created() {\n    if (!this.$options.remember) {\n      return\n    }\n\n    if (Array.isArray(this.$options.remember)) {\n      this.$options.remember = { data: this.$options.remember }\n    }\n\n    if (typeof this.$options.remember === 'string') {\n      this.$options.remember = { data: [this.$options.remember] }\n    }\n\n    if (typeof this.$options.remember.data === 'string') {\n      this.$options.remember = { data: [this.$options.remember.data] }\n    }\n\n    const rememberKey =\n      this.$options.remember.key instanceof Function\n        ? this.$options.remember.key.call(this)\n        : this.$options.remember.key\n\n    const restored = router.restore(rememberKey)\n\n    const rememberable = this.$options.remember.data.filter((key) => {\n      return !(this[key] !== null && typeof this[key] === 'object' && this[key].__rememberable === false)\n    })\n\n    const hasCallbacks = (key) => {\n      return (\n        this[key] !== null &&\n        typeof this[key] === 'object' &&\n        typeof this[key].__remember === 'function' &&\n        typeof this[key].__restore === 'function'\n      )\n    }\n\n    rememberable.forEach((key) => {\n      if (this[key] !== undefined && restored !== undefined && restored[key] !== undefined) {\n        hasCallbacks(key) ? this[key].__restore(restored[key]) : (this[key] = restored[key])\n      }\n\n      this.$watch(\n        key,\n        () => {\n          router.remember(\n            rememberable.reduce(\n              (data, key) => ({\n                ...data,\n                [key]: cloneDeep(hasCallbacks(key) ? this[key].__remember() : this[key]),\n              }),\n              {},\n            ),\n            rememberKey,\n          )\n        },\n        { immediate: true, deep: true },\n      )\n    })\n  },\n}\n\nexport default remember\n", "import { Progress, router, VisitOptions } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport isEqual from 'lodash.isequal'\nimport { reactive, watch } from 'vue'\n\ninterface InertiaFormProps<TForm extends Record<string, unknown>> {\n  isDirty: boolean\n  errors: Partial<Record<keyof TForm, string>>\n  hasErrors: boolean\n  processing: boolean\n  progress: Progress | null\n  wasSuccessful: boolean\n  recentlySuccessful: boolean\n  data(): TForm\n  transform(callback: (data: TForm) => object): this\n  defaults(): this\n  defaults(field: keyof TForm, value: string): this\n  defaults(fields: Record<keyof TForm, string>): this\n  reset(...fields: (keyof TForm)[]): this\n  clearErrors(...fields: (keyof TForm)[]): this\n  setError(field: keyof TForm, value: string): this\n  setError(errors: Record<keyof TForm, string>): this\n  submit(method: string, url: string, options?: Partial<VisitOptions>): void\n  get(url: string, options?: Partial<VisitOptions>): void\n  post(url: string, options?: Partial<VisitOptions>): void\n  put(url: string, options?: Partial<VisitOptions>): void\n  patch(url: string, options?: Partial<VisitOptions>): void\n  delete(url: string, options?: Partial<VisitOptions>): void\n  cancel(): void\n}\n\ntype InertiaForm<TForm extends Record<string, unknown>> = TForm & InertiaFormProps<TForm>\n\nexport default function useForm<TForm extends Record<string, unknown>>(data: TForm): InertiaForm<TForm>\nexport default function useForm<TForm extends Record<string, unknown>>(\n  rememberKey: string,\n  data: TForm,\n): InertiaForm<TForm>\nexport default function useForm<TForm extends Record<string, unknown>>(\n  rememberKeyOrData: string | TForm,\n  maybeData?: TForm,\n): InertiaForm<TForm> {\n  const rememberKey = typeof rememberKeyOrData === 'string' ? rememberKeyOrData : null\n  const data = typeof rememberKeyOrData === 'object' ? rememberKeyOrData : maybeData\n  const restored = rememberKey\n    ? (router.restore(rememberKey) as { data: TForm; errors: Record<keyof TForm, string> })\n    : null\n  let defaults = cloneDeep(data)\n  let cancelToken = null\n  let recentlySuccessfulTimeoutId = null\n  let transform = (data) => data\n\n  let form = reactive({\n    ...(restored ? restored.data : data),\n    isDirty: false,\n    errors: restored ? restored.errors : {},\n    hasErrors: false,\n    processing: false,\n    progress: null,\n    wasSuccessful: false,\n    recentlySuccessful: false,\n    data() {\n      return (Object.keys(data) as Array<keyof TForm>).reduce((carry, key) => {\n        // @ts-expect-error\n        carry[key] = this[key]\n        return carry\n      }, {} as Partial<TForm>) as TForm\n    },\n    transform(callback) {\n      transform = callback\n\n      return this\n    },\n    defaults(fieldOrFields?: keyof TForm | Record<keyof TForm, string>, maybeValue?: string) {\n      if (typeof fieldOrFields === 'undefined') {\n        defaults = this.data()\n      } else {\n        defaults = Object.assign(\n          {},\n          cloneDeep(defaults),\n          typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : fieldOrFields,\n        )\n      }\n\n      return this\n    },\n    reset(...fields) {\n      let clonedDefaults = cloneDeep(defaults)\n      if (fields.length === 0) {\n        Object.assign(this, clonedDefaults)\n      } else {\n        Object.assign(\n          this,\n          Object.keys(clonedDefaults)\n            .filter((key) => fields.includes(key))\n            .reduce((carry, key) => {\n              carry[key] = clonedDefaults[key]\n              return carry\n            }, {}),\n        )\n      }\n\n      return this\n    },\n    setError(fieldOrFields: keyof TForm | Record<keyof TForm, string>, maybeValue?: string) {\n      Object.assign(this.errors, typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : fieldOrFields)\n\n      this.hasErrors = Object.keys(this.errors).length > 0\n\n      return this\n    },\n    clearErrors(...fields) {\n      this.errors = Object.keys(this.errors).reduce(\n        (carry, field) => ({\n          ...carry,\n          ...(fields.length > 0 && !fields.includes(field) ? { [field]: this.errors[field] } : {}),\n        }),\n        {},\n      )\n\n      this.hasErrors = Object.keys(this.errors).length > 0\n\n      return this\n    },\n    submit(method, url, options: VisitOptions = {}) {\n      const data = transform(this.data())\n      const _options = {\n        ...options,\n        onCancelToken: (token) => {\n          cancelToken = token\n\n          if (options.onCancelToken) {\n            return options.onCancelToken(token)\n          }\n        },\n        onBefore: (visit) => {\n          this.wasSuccessful = false\n          this.recentlySuccessful = false\n          clearTimeout(recentlySuccessfulTimeoutId)\n\n          if (options.onBefore) {\n            return options.onBefore(visit)\n          }\n        },\n        onStart: (visit) => {\n          this.processing = true\n\n          if (options.onStart) {\n            return options.onStart(visit)\n          }\n        },\n        onProgress: (event) => {\n          this.progress = event\n\n          if (options.onProgress) {\n            return options.onProgress(event)\n          }\n        },\n        onSuccess: async (page) => {\n          this.processing = false\n          this.progress = null\n          this.clearErrors()\n          this.wasSuccessful = true\n          this.recentlySuccessful = true\n          recentlySuccessfulTimeoutId = setTimeout(() => (this.recentlySuccessful = false), 2000)\n\n          const onSuccess = options.onSuccess ? await options.onSuccess(page) : null\n          defaults = cloneDeep(this.data())\n          this.isDirty = false\n          return onSuccess\n        },\n        onError: (errors) => {\n          this.processing = false\n          this.progress = null\n          this.clearErrors().setError(errors)\n\n          if (options.onError) {\n            return options.onError(errors)\n          }\n        },\n        onCancel: () => {\n          this.processing = false\n          this.progress = null\n\n          if (options.onCancel) {\n            return options.onCancel()\n          }\n        },\n        onFinish: (visit) => {\n          this.processing = false\n          this.progress = null\n          cancelToken = null\n\n          if (options.onFinish) {\n            return options.onFinish(visit)\n          }\n        },\n      }\n\n      if (method === 'delete') {\n        router.delete(url, { ..._options, data })\n      } else {\n        router[method](url, data, _options)\n      }\n    },\n    get(url, options) {\n      this.submit('get', url, options)\n    },\n    post(url, options) {\n      this.submit('post', url, options)\n    },\n    put(url, options) {\n      this.submit('put', url, options)\n    },\n    patch(url, options) {\n      this.submit('patch', url, options)\n    },\n    delete(url, options) {\n      this.submit('delete', url, options)\n    },\n    cancel() {\n      if (cancelToken) {\n        cancelToken.cancel()\n      }\n    },\n    __rememberable: rememberKey === null,\n    __remember() {\n      return { data: this.data(), errors: this.errors }\n    },\n    __restore(restored) {\n      Object.assign(this, restored.data)\n      this.setError(restored.errors)\n    },\n  })\n\n  watch(\n    form,\n    (newValue) => {\n      form.isDirty = !isEqual(form.data(), defaults)\n      if (rememberKey) {\n        router.remember(cloneDeep(newValue.__remember()), rememberKey)\n      }\n    },\n    { immediate: true, deep: true },\n  )\n\n  return form\n}\n", "import { Page, setupProgress } from '@inertiajs/core'\nimport { App as VueApp, createSSRApp, DefineComponent, h, Plugin } from 'vue'\nimport App, { InertiaApp, InertiaAppProps, plugin } from './app'\n\ninterface CreateInertiaAppProps {\n  id?: string\n  resolve: (name: string) => DefineComponent | Promise<DefineComponent> | { default: DefineComponent }\n  setup: (props: { el: Element; App: InertiaApp; props: InertiaAppProps; plugin: Plugin }) => void | VueApp\n  title?: (title: string) => string\n  progress?:\n    | false\n    | {\n        delay?: number\n        color?: string\n        includeCSS?: boolean\n        showSpinner?: boolean\n      }\n  page?: Page\n  render?: (app: VueApp) => Promise<string>\n}\n\nexport default async function createInertiaApp({\n  id = 'app',\n  resolve,\n  setup,\n  title,\n  progress = {},\n  page,\n  render,\n}: CreateInertiaAppProps): Promise<{ head: string[]; body: string }> {\n  const isServer = typeof window === 'undefined'\n  const el = isServer ? null : document.getElementById(id)\n  const initialPage = page || JSON.parse(el.dataset.page)\n  const resolveComponent = (name) => Promise.resolve(resolve(name)).then((module) => module.default || module)\n\n  let head = []\n\n  const vueApp = await resolveComponent(initialPage.component).then((initialComponent) => {\n    return setup({\n      el,\n      App,\n      props: {\n        initialPage,\n        initialComponent,\n        resolveComponent,\n        titleCallback: title,\n        onHeadUpdate: isServer ? (elements) => (head = elements) : null,\n      },\n      plugin,\n    })\n  })\n\n  if (!isServer && progress) {\n    setupProgress(progress)\n  }\n\n  if (isServer) {\n    const body = await render(\n      createSSRApp({\n        render: () =>\n          h('div', {\n            id,\n            'data-page': JSON.stringify(initialPage),\n            innerHTML: vueApp ? render(vueApp) : '',\n          }),\n      }),\n    )\n\n    return { head, body }\n  }\n}\n", "import { defineComponent, DefineComponent } from 'vue'\n\nexport type InertiaHead = DefineComponent<{\n  title?: string\n}>\n\nconst Head: InertiaHead = defineComponent({\n  props: {\n    title: {\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      provider: this.$headManager.createProvider(),\n    }\n  },\n  beforeUnmount() {\n    this.provider.disconnect()\n  },\n  methods: {\n    isUnaryTag(node) {\n      return (\n        [\n          'area',\n          'base',\n          'br',\n          'col',\n          'embed',\n          'hr',\n          'img',\n          'input',\n          'keygen',\n          'link',\n          'meta',\n          'param',\n          'source',\n          'track',\n          'wbr',\n        ].indexOf(node.type) > -1\n      )\n    },\n    renderTagStart(node) {\n      node.props = node.props || {}\n      node.props.inertia = node.props['head-key'] !== undefined ? node.props['head-key'] : ''\n      const attrs = Object.keys(node.props).reduce((carry, name) => {\n        const value = node.props[name]\n        if (['key', 'head-key'].includes(name)) {\n          return carry\n        } else if (value === '') {\n          return carry + ` ${name}`\n        } else {\n          return carry + ` ${name}=\"${value}\"`\n        }\n      }, '')\n      return `<${node.type}${attrs}>`\n    },\n    renderTagChildren(node) {\n      return typeof node.children === 'string'\n        ? node.children\n        : node.children.reduce((html, child) => html + this.renderTag(child), '')\n    },\n    renderTag(node) {\n      if (node.type.toString() === 'Symbol(Text)') {\n        return node.children\n      } else if (node.type.toString() === 'Symbol()') {\n        return ''\n      } else if (node.type.toString() === 'Symbol(Comment)') {\n        return ''\n      }\n      let html = this.renderTagStart(node)\n      if (node.children) {\n        html += this.renderTagChildren(node)\n      }\n      if (!this.isUnaryTag(node)) {\n        html += `</${node.type}>`\n      }\n      return html\n    },\n    addTitleElement(elements) {\n      if (this.title && !elements.find((tag) => tag.startsWith('<title'))) {\n        elements.push(`<title inertia>${this.title}</title>`)\n      }\n      return elements\n    },\n    renderNodes(nodes) {\n      return this.addTitleElement(\n        nodes\n          .flatMap((node) => (node.type.toString() === 'Symbol(Fragment)' ? node.children : node))\n          .map((node) => this.renderTag(node))\n          .filter((node) => node),\n      )\n    },\n  },\n  render() {\n    this.provider.update(this.renderNodes(this.$slots.default ? this.$slots.default() : []))\n  },\n})\n\nexport default Head\n", "import { mergeDataIntoQueryString, Method, PageProps, Progress, router, shouldIntercept } from '@inertiajs/core'\nimport { defineComponent, DefineComponent, h, PropType } from 'vue'\n\ninterface InertiaLinkProps {\n  as?: string\n  data?: object\n  href: string\n  method?: Method\n  headers?: object\n  onClick?: (event: MouseEvent | KeyboardEvent) => void\n  preserveScroll?: boolean | ((props: PageProps) => boolean)\n  preserveState?: boolean | ((props: PageProps) => boolean) | null\n  replace?: boolean\n  only?: string[]\n  onCancelToken?: (cancelToken: import('axios').CancelTokenSource) => void\n  onBefore?: () => void\n  onStart?: () => void\n  onProgress?: (progress: Progress) => void\n  onFinish?: () => void\n  onCancel?: () => void\n  onSuccess?: () => void\n  queryStringArrayFormat?: 'brackets' | 'indices'\n}\n\ntype InertiaLink = DefineComponent<InertiaLinkProps>\n\nconst Link: InertiaLink = defineComponent({\n  name: 'Link',\n  props: {\n    as: {\n      type: String,\n      default: 'a',\n    },\n    data: {\n      type: Object,\n      default: () => ({}),\n    },\n    href: {\n      type: String,\n      required: true,\n    },\n    method: {\n      type: String as PropType<Method>,\n      default: 'get',\n    },\n    replace: {\n      type: Boolean,\n      default: false,\n    },\n    preserveScroll: {\n      type: Boolean,\n      default: false,\n    },\n    preserveState: {\n      type: Boolean,\n      default: null,\n    },\n    only: {\n      type: Array<string>,\n      default: () => [],\n    },\n    headers: {\n      type: Object,\n      default: () => ({}),\n    },\n    queryStringArrayFormat: {\n      type: String as PropType<'brackets' | 'indices'>,\n      default: 'brackets',\n    },\n  },\n  setup(props, { slots, attrs }) {\n    return () => {\n      const as = props.as.toLowerCase()\n      const method = props.method.toLowerCase() as Method\n      const [href, data] = mergeDataIntoQueryString(method, props.href || '', props.data, props.queryStringArrayFormat)\n\n      if (as === 'a' && method !== 'get') {\n        console.warn(\n          `Creating POST/PUT/PATCH/DELETE <a> links is discouraged as it causes \"Open Link in New Tab/Window\" accessibility issues.\\n\\nPlease specify a more appropriate element using the \"as\" attribute. For example:\\n\\n<Link href=\"${href}\" method=\"${method}\" as=\"button\">...</Link>`,\n        )\n      }\n\n      return h(\n        props.as,\n        {\n          ...attrs,\n          ...(as === 'a' ? { href } : {}),\n          onClick: (event) => {\n            if (shouldIntercept(event)) {\n              event.preventDefault()\n\n              router.visit(href, {\n                data: data,\n                method: method,\n                replace: props.replace,\n                preserveScroll: props.preserveScroll,\n                preserveState: props.preserveState ?? method !== 'get',\n                only: props.only,\n                headers: props.headers,\n                // @ts-expect-error\n                onCancelToken: attrs.onCancelToken || (() => ({})),\n                // @ts-expect-error\n                onBefore: attrs.onBefore || (() => ({})),\n                // @ts-expect-error\n                onStart: attrs.onStart || (() => ({})),\n                // @ts-expect-error\n                onProgress: attrs.onProgress || (() => ({})),\n                // @ts-expect-error\n                onFinish: attrs.onFinish || (() => ({})),\n                // @ts-expect-error\n                onCancel: attrs.onCancel || (() => ({})),\n                // @ts-expect-error\n                onSuccess: attrs.onSuccess || (() => ({})),\n                // @ts-expect-error\n                onError: attrs.onError || (() => ({})),\n              })\n            }\n          },\n        },\n        slots,\n      )\n    }\n  },\n})\n\nexport default Link\n", "import { router } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport { isReactive, reactive, ref, Ref, watch } from 'vue'\n\nexport default function useRemember<T extends object>(\n  data: T & { __rememberable?: boolean; __remember?: Function; __restore?: Function },\n  key?: string,\n): Ref<T> | T {\n  if (typeof data === 'object' && data !== null && data.__rememberable === false) {\n    return data\n  }\n\n  const restored = router.restore(key)\n  const type = isReactive(data) ? reactive : ref\n  const hasCallbacks = typeof data.__remember === 'function' && typeof data.__restore === 'function'\n  const remembered = restored === undefined ? data : type(hasCallbacks ? data.__restore(restored) : restored)\n\n  watch(\n    remembered,\n    (newValue) => {\n      router.remember(cloneDeep(hasCallbacks ? data.__remember() : newValue), key)\n    },\n    { immediate: true, deep: true },\n  )\n\n  return remembered\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "head_default", "link_default", "createInertiaApp", "useForm", "usePage", "useRemember", "__toCommonJS", "import_core", "import_core", "import_vue", "import_core", "import_lodash", "remember", "rememberKey", "restored", "rememberable", "key", "hasCallbacks", "data", "cloneDeep", "remember_default", "import_core", "import_lodash", "import_vue", "useForm", "rememberKeyOrData", "maybeData", "rememberKey", "data", "restored", "defaults", "cloneDeep", "cancelToken", "recentlySuccessfulTimeoutId", "transform", "form", "carry", "key", "callback", "fieldOrFields", "maybeValue", "fields", "clonedDefaults", "field", "method", "url", "options", "_options", "token", "visit", "event", "page", "onSuccess", "errors", "newValue", "isEqual", "component", "page", "layout", "key", "headManager", "App", "title", "initialPage", "initialComponent", "resolveComponent", "titleCallback", "onHeadUpdate", "isServer", "args", "child", "app_default", "plugin", "app", "useForm", "remember_default", "usePage", "import_core", "import_vue", "createInertiaApp", "id", "resolve", "setup", "title", "progress", "page", "render", "isServer", "el", "initialPage", "resolveComponent", "name", "module", "head", "vueApp", "initialComponent", "app_default", "elements", "plugin", "body", "import_vue", "Head", "node", "attrs", "carry", "name", "value", "html", "child", "elements", "tag", "nodes", "head_default", "import_core", "import_vue", "Link", "props", "slots", "attrs", "as", "method", "href", "data", "event", "link_default", "import_core", "import_lodash", "import_vue", "useRemember", "data", "key", "restored", "type", "hasCallbacks", "remembered", "newValue", "cloneDeep"]
}
